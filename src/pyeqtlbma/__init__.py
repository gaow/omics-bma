# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _pyeqtlbma.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pyeqtlbma', [dirname(__file__)])
        except ImportError:
            import _pyeqtlbma
            return _pyeqtlbma
        if fp is not None:
            try:
                _mod = imp.load_module('_pyeqtlbma', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pyeqtlbma = swig_import_helper()
    del swig_import_helper
else:
    import _pyeqtlbma
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def my_error_handler(reason, file, line, gsl_errno):
    return _pyeqtlbma.my_error_handler(reason, file, line, gsl_errno)
my_error_handler = _pyeqtlbma.my_error_handler

def gsl_initialize():
    return _pyeqtlbma.gsl_initialize()
gsl_initialize = _pyeqtlbma.gsl_initialize
class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyeqtlbma.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_pyeqtlbma.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_pyeqtlbma.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_pyeqtlbma.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_pyeqtlbma.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_pyeqtlbma.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_pyeqtlbma.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_pyeqtlbma.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_pyeqtlbma.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_pyeqtlbma.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_pyeqtlbma.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_pyeqtlbma.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_pyeqtlbma.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_pyeqtlbma.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_pyeqtlbma.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_pyeqtlbma.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_pyeqtlbma.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _pyeqtlbma.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class vectors(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.vectors_swiginit(self, _pyeqtlbma.new_vectors(*args))
    __swig_destroy__ = _pyeqtlbma.delete_vectors
vectors.iterator = new_instancemethod(_pyeqtlbma.vectors_iterator, None, vectors)
vectors.__nonzero__ = new_instancemethod(_pyeqtlbma.vectors___nonzero__, None, vectors)
vectors.__bool__ = new_instancemethod(_pyeqtlbma.vectors___bool__, None, vectors)
vectors.__len__ = new_instancemethod(_pyeqtlbma.vectors___len__, None, vectors)
vectors.__getslice__ = new_instancemethod(_pyeqtlbma.vectors___getslice__, None, vectors)
vectors.__setslice__ = new_instancemethod(_pyeqtlbma.vectors___setslice__, None, vectors)
vectors.__delslice__ = new_instancemethod(_pyeqtlbma.vectors___delslice__, None, vectors)
vectors.__delitem__ = new_instancemethod(_pyeqtlbma.vectors___delitem__, None, vectors)
vectors.__getitem__ = new_instancemethod(_pyeqtlbma.vectors___getitem__, None, vectors)
vectors.__setitem__ = new_instancemethod(_pyeqtlbma.vectors___setitem__, None, vectors)
vectors.pop = new_instancemethod(_pyeqtlbma.vectors_pop, None, vectors)
vectors.append = new_instancemethod(_pyeqtlbma.vectors_append, None, vectors)
vectors.empty = new_instancemethod(_pyeqtlbma.vectors_empty, None, vectors)
vectors.size = new_instancemethod(_pyeqtlbma.vectors_size, None, vectors)
vectors.swap = new_instancemethod(_pyeqtlbma.vectors_swap, None, vectors)
vectors.begin = new_instancemethod(_pyeqtlbma.vectors_begin, None, vectors)
vectors.end = new_instancemethod(_pyeqtlbma.vectors_end, None, vectors)
vectors.rbegin = new_instancemethod(_pyeqtlbma.vectors_rbegin, None, vectors)
vectors.rend = new_instancemethod(_pyeqtlbma.vectors_rend, None, vectors)
vectors.clear = new_instancemethod(_pyeqtlbma.vectors_clear, None, vectors)
vectors.get_allocator = new_instancemethod(_pyeqtlbma.vectors_get_allocator, None, vectors)
vectors.pop_back = new_instancemethod(_pyeqtlbma.vectors_pop_back, None, vectors)
vectors.erase = new_instancemethod(_pyeqtlbma.vectors_erase, None, vectors)
vectors.push_back = new_instancemethod(_pyeqtlbma.vectors_push_back, None, vectors)
vectors.front = new_instancemethod(_pyeqtlbma.vectors_front, None, vectors)
vectors.back = new_instancemethod(_pyeqtlbma.vectors_back, None, vectors)
vectors.assign = new_instancemethod(_pyeqtlbma.vectors_assign, None, vectors)
vectors.resize = new_instancemethod(_pyeqtlbma.vectors_resize, None, vectors)
vectors.insert = new_instancemethod(_pyeqtlbma.vectors_insert, None, vectors)
vectors.reserve = new_instancemethod(_pyeqtlbma.vectors_reserve, None, vectors)
vectors.capacity = new_instancemethod(_pyeqtlbma.vectors_capacity, None, vectors)
vectors_swigregister = _pyeqtlbma.vectors_swigregister
vectors_swigregister(vectors)

class vectorf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.vectorf_swiginit(self, _pyeqtlbma.new_vectorf(*args))
    __swig_destroy__ = _pyeqtlbma.delete_vectorf
vectorf.iterator = new_instancemethod(_pyeqtlbma.vectorf_iterator, None, vectorf)
vectorf.__nonzero__ = new_instancemethod(_pyeqtlbma.vectorf___nonzero__, None, vectorf)
vectorf.__bool__ = new_instancemethod(_pyeqtlbma.vectorf___bool__, None, vectorf)
vectorf.__len__ = new_instancemethod(_pyeqtlbma.vectorf___len__, None, vectorf)
vectorf.__getslice__ = new_instancemethod(_pyeqtlbma.vectorf___getslice__, None, vectorf)
vectorf.__setslice__ = new_instancemethod(_pyeqtlbma.vectorf___setslice__, None, vectorf)
vectorf.__delslice__ = new_instancemethod(_pyeqtlbma.vectorf___delslice__, None, vectorf)
vectorf.__delitem__ = new_instancemethod(_pyeqtlbma.vectorf___delitem__, None, vectorf)
vectorf.__getitem__ = new_instancemethod(_pyeqtlbma.vectorf___getitem__, None, vectorf)
vectorf.__setitem__ = new_instancemethod(_pyeqtlbma.vectorf___setitem__, None, vectorf)
vectorf.pop = new_instancemethod(_pyeqtlbma.vectorf_pop, None, vectorf)
vectorf.append = new_instancemethod(_pyeqtlbma.vectorf_append, None, vectorf)
vectorf.empty = new_instancemethod(_pyeqtlbma.vectorf_empty, None, vectorf)
vectorf.size = new_instancemethod(_pyeqtlbma.vectorf_size, None, vectorf)
vectorf.swap = new_instancemethod(_pyeqtlbma.vectorf_swap, None, vectorf)
vectorf.begin = new_instancemethod(_pyeqtlbma.vectorf_begin, None, vectorf)
vectorf.end = new_instancemethod(_pyeqtlbma.vectorf_end, None, vectorf)
vectorf.rbegin = new_instancemethod(_pyeqtlbma.vectorf_rbegin, None, vectorf)
vectorf.rend = new_instancemethod(_pyeqtlbma.vectorf_rend, None, vectorf)
vectorf.clear = new_instancemethod(_pyeqtlbma.vectorf_clear, None, vectorf)
vectorf.get_allocator = new_instancemethod(_pyeqtlbma.vectorf_get_allocator, None, vectorf)
vectorf.pop_back = new_instancemethod(_pyeqtlbma.vectorf_pop_back, None, vectorf)
vectorf.erase = new_instancemethod(_pyeqtlbma.vectorf_erase, None, vectorf)
vectorf.push_back = new_instancemethod(_pyeqtlbma.vectorf_push_back, None, vectorf)
vectorf.front = new_instancemethod(_pyeqtlbma.vectorf_front, None, vectorf)
vectorf.back = new_instancemethod(_pyeqtlbma.vectorf_back, None, vectorf)
vectorf.assign = new_instancemethod(_pyeqtlbma.vectorf_assign, None, vectorf)
vectorf.resize = new_instancemethod(_pyeqtlbma.vectorf_resize, None, vectorf)
vectorf.insert = new_instancemethod(_pyeqtlbma.vectorf_insert, None, vectorf)
vectorf.reserve = new_instancemethod(_pyeqtlbma.vectorf_reserve, None, vectorf)
vectorf.capacity = new_instancemethod(_pyeqtlbma.vectorf_capacity, None, vectorf)
vectorf_swigregister = _pyeqtlbma.vectorf_swigregister
vectorf_swigregister(vectorf)

class vectori(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.vectori_swiginit(self, _pyeqtlbma.new_vectori(*args))
    __swig_destroy__ = _pyeqtlbma.delete_vectori
vectori.iterator = new_instancemethod(_pyeqtlbma.vectori_iterator, None, vectori)
vectori.__nonzero__ = new_instancemethod(_pyeqtlbma.vectori___nonzero__, None, vectori)
vectori.__bool__ = new_instancemethod(_pyeqtlbma.vectori___bool__, None, vectori)
vectori.__len__ = new_instancemethod(_pyeqtlbma.vectori___len__, None, vectori)
vectori.__getslice__ = new_instancemethod(_pyeqtlbma.vectori___getslice__, None, vectori)
vectori.__setslice__ = new_instancemethod(_pyeqtlbma.vectori___setslice__, None, vectori)
vectori.__delslice__ = new_instancemethod(_pyeqtlbma.vectori___delslice__, None, vectori)
vectori.__delitem__ = new_instancemethod(_pyeqtlbma.vectori___delitem__, None, vectori)
vectori.__getitem__ = new_instancemethod(_pyeqtlbma.vectori___getitem__, None, vectori)
vectori.__setitem__ = new_instancemethod(_pyeqtlbma.vectori___setitem__, None, vectori)
vectori.pop = new_instancemethod(_pyeqtlbma.vectori_pop, None, vectori)
vectori.append = new_instancemethod(_pyeqtlbma.vectori_append, None, vectori)
vectori.empty = new_instancemethod(_pyeqtlbma.vectori_empty, None, vectori)
vectori.size = new_instancemethod(_pyeqtlbma.vectori_size, None, vectori)
vectori.swap = new_instancemethod(_pyeqtlbma.vectori_swap, None, vectori)
vectori.begin = new_instancemethod(_pyeqtlbma.vectori_begin, None, vectori)
vectori.end = new_instancemethod(_pyeqtlbma.vectori_end, None, vectori)
vectori.rbegin = new_instancemethod(_pyeqtlbma.vectori_rbegin, None, vectori)
vectori.rend = new_instancemethod(_pyeqtlbma.vectori_rend, None, vectori)
vectori.clear = new_instancemethod(_pyeqtlbma.vectori_clear, None, vectori)
vectori.get_allocator = new_instancemethod(_pyeqtlbma.vectori_get_allocator, None, vectori)
vectori.pop_back = new_instancemethod(_pyeqtlbma.vectori_pop_back, None, vectori)
vectori.erase = new_instancemethod(_pyeqtlbma.vectori_erase, None, vectori)
vectori.push_back = new_instancemethod(_pyeqtlbma.vectori_push_back, None, vectori)
vectori.front = new_instancemethod(_pyeqtlbma.vectori_front, None, vectori)
vectori.back = new_instancemethod(_pyeqtlbma.vectori_back, None, vectori)
vectori.assign = new_instancemethod(_pyeqtlbma.vectori_assign, None, vectori)
vectori.resize = new_instancemethod(_pyeqtlbma.vectori_resize, None, vectori)
vectori.insert = new_instancemethod(_pyeqtlbma.vectori_insert, None, vectori)
vectori.reserve = new_instancemethod(_pyeqtlbma.vectori_reserve, None, vectori)
vectori.capacity = new_instancemethod(_pyeqtlbma.vectori_capacity, None, vectori)
vectori_swigregister = _pyeqtlbma.vectori_swigregister
vectori_swigregister(vectori)

class matrixi(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.matrixi_swiginit(self, _pyeqtlbma.new_matrixi(*args))
    __swig_destroy__ = _pyeqtlbma.delete_matrixi
matrixi.iterator = new_instancemethod(_pyeqtlbma.matrixi_iterator, None, matrixi)
matrixi.__nonzero__ = new_instancemethod(_pyeqtlbma.matrixi___nonzero__, None, matrixi)
matrixi.__bool__ = new_instancemethod(_pyeqtlbma.matrixi___bool__, None, matrixi)
matrixi.__len__ = new_instancemethod(_pyeqtlbma.matrixi___len__, None, matrixi)
matrixi.__getslice__ = new_instancemethod(_pyeqtlbma.matrixi___getslice__, None, matrixi)
matrixi.__setslice__ = new_instancemethod(_pyeqtlbma.matrixi___setslice__, None, matrixi)
matrixi.__delslice__ = new_instancemethod(_pyeqtlbma.matrixi___delslice__, None, matrixi)
matrixi.__delitem__ = new_instancemethod(_pyeqtlbma.matrixi___delitem__, None, matrixi)
matrixi.__getitem__ = new_instancemethod(_pyeqtlbma.matrixi___getitem__, None, matrixi)
matrixi.__setitem__ = new_instancemethod(_pyeqtlbma.matrixi___setitem__, None, matrixi)
matrixi.pop = new_instancemethod(_pyeqtlbma.matrixi_pop, None, matrixi)
matrixi.append = new_instancemethod(_pyeqtlbma.matrixi_append, None, matrixi)
matrixi.empty = new_instancemethod(_pyeqtlbma.matrixi_empty, None, matrixi)
matrixi.size = new_instancemethod(_pyeqtlbma.matrixi_size, None, matrixi)
matrixi.swap = new_instancemethod(_pyeqtlbma.matrixi_swap, None, matrixi)
matrixi.begin = new_instancemethod(_pyeqtlbma.matrixi_begin, None, matrixi)
matrixi.end = new_instancemethod(_pyeqtlbma.matrixi_end, None, matrixi)
matrixi.rbegin = new_instancemethod(_pyeqtlbma.matrixi_rbegin, None, matrixi)
matrixi.rend = new_instancemethod(_pyeqtlbma.matrixi_rend, None, matrixi)
matrixi.clear = new_instancemethod(_pyeqtlbma.matrixi_clear, None, matrixi)
matrixi.get_allocator = new_instancemethod(_pyeqtlbma.matrixi_get_allocator, None, matrixi)
matrixi.pop_back = new_instancemethod(_pyeqtlbma.matrixi_pop_back, None, matrixi)
matrixi.erase = new_instancemethod(_pyeqtlbma.matrixi_erase, None, matrixi)
matrixi.push_back = new_instancemethod(_pyeqtlbma.matrixi_push_back, None, matrixi)
matrixi.front = new_instancemethod(_pyeqtlbma.matrixi_front, None, matrixi)
matrixi.back = new_instancemethod(_pyeqtlbma.matrixi_back, None, matrixi)
matrixi.assign = new_instancemethod(_pyeqtlbma.matrixi_assign, None, matrixi)
matrixi.resize = new_instancemethod(_pyeqtlbma.matrixi_resize, None, matrixi)
matrixi.insert = new_instancemethod(_pyeqtlbma.matrixi_insert, None, matrixi)
matrixi.reserve = new_instancemethod(_pyeqtlbma.matrixi_reserve, None, matrixi)
matrixi.capacity = new_instancemethod(_pyeqtlbma.matrixi_capacity, None, matrixi)
matrixi_swigregister = _pyeqtlbma.matrixi_swigregister
matrixi_swigregister(matrixi)

class matrixf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.matrixf_swiginit(self, _pyeqtlbma.new_matrixf(*args))
    __swig_destroy__ = _pyeqtlbma.delete_matrixf
matrixf.iterator = new_instancemethod(_pyeqtlbma.matrixf_iterator, None, matrixf)
matrixf.__nonzero__ = new_instancemethod(_pyeqtlbma.matrixf___nonzero__, None, matrixf)
matrixf.__bool__ = new_instancemethod(_pyeqtlbma.matrixf___bool__, None, matrixf)
matrixf.__len__ = new_instancemethod(_pyeqtlbma.matrixf___len__, None, matrixf)
matrixf.__getslice__ = new_instancemethod(_pyeqtlbma.matrixf___getslice__, None, matrixf)
matrixf.__setslice__ = new_instancemethod(_pyeqtlbma.matrixf___setslice__, None, matrixf)
matrixf.__delslice__ = new_instancemethod(_pyeqtlbma.matrixf___delslice__, None, matrixf)
matrixf.__delitem__ = new_instancemethod(_pyeqtlbma.matrixf___delitem__, None, matrixf)
matrixf.__getitem__ = new_instancemethod(_pyeqtlbma.matrixf___getitem__, None, matrixf)
matrixf.__setitem__ = new_instancemethod(_pyeqtlbma.matrixf___setitem__, None, matrixf)
matrixf.pop = new_instancemethod(_pyeqtlbma.matrixf_pop, None, matrixf)
matrixf.append = new_instancemethod(_pyeqtlbma.matrixf_append, None, matrixf)
matrixf.empty = new_instancemethod(_pyeqtlbma.matrixf_empty, None, matrixf)
matrixf.size = new_instancemethod(_pyeqtlbma.matrixf_size, None, matrixf)
matrixf.swap = new_instancemethod(_pyeqtlbma.matrixf_swap, None, matrixf)
matrixf.begin = new_instancemethod(_pyeqtlbma.matrixf_begin, None, matrixf)
matrixf.end = new_instancemethod(_pyeqtlbma.matrixf_end, None, matrixf)
matrixf.rbegin = new_instancemethod(_pyeqtlbma.matrixf_rbegin, None, matrixf)
matrixf.rend = new_instancemethod(_pyeqtlbma.matrixf_rend, None, matrixf)
matrixf.clear = new_instancemethod(_pyeqtlbma.matrixf_clear, None, matrixf)
matrixf.get_allocator = new_instancemethod(_pyeqtlbma.matrixf_get_allocator, None, matrixf)
matrixf.pop_back = new_instancemethod(_pyeqtlbma.matrixf_pop_back, None, matrixf)
matrixf.erase = new_instancemethod(_pyeqtlbma.matrixf_erase, None, matrixf)
matrixf.push_back = new_instancemethod(_pyeqtlbma.matrixf_push_back, None, matrixf)
matrixf.front = new_instancemethod(_pyeqtlbma.matrixf_front, None, matrixf)
matrixf.back = new_instancemethod(_pyeqtlbma.matrixf_back, None, matrixf)
matrixf.assign = new_instancemethod(_pyeqtlbma.matrixf_assign, None, matrixf)
matrixf.resize = new_instancemethod(_pyeqtlbma.matrixf_resize, None, matrixf)
matrixf.insert = new_instancemethod(_pyeqtlbma.matrixf_insert, None, matrixf)
matrixf.reserve = new_instancemethod(_pyeqtlbma.matrixf_reserve, None, matrixf)
matrixf.capacity = new_instancemethod(_pyeqtlbma.matrixf_capacity, None, matrixf)
matrixf_swigregister = _pyeqtlbma.matrixf_swigregister
matrixf_swigregister(matrixf)

class dict_vectors(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_vectors_swiginit(self, _pyeqtlbma.new_dict_vectors(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_vectors
dict_vectors.iterator = new_instancemethod(_pyeqtlbma.dict_vectors_iterator, None, dict_vectors)
dict_vectors.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_vectors___nonzero__, None, dict_vectors)
dict_vectors.__bool__ = new_instancemethod(_pyeqtlbma.dict_vectors___bool__, None, dict_vectors)
dict_vectors.__len__ = new_instancemethod(_pyeqtlbma.dict_vectors___len__, None, dict_vectors)
dict_vectors.__getitem__ = new_instancemethod(_pyeqtlbma.dict_vectors___getitem__, None, dict_vectors)
dict_vectors.__delitem__ = new_instancemethod(_pyeqtlbma.dict_vectors___delitem__, None, dict_vectors)
dict_vectors.has_key = new_instancemethod(_pyeqtlbma.dict_vectors_has_key, None, dict_vectors)
dict_vectors.keys = new_instancemethod(_pyeqtlbma.dict_vectors_keys, None, dict_vectors)
dict_vectors.values = new_instancemethod(_pyeqtlbma.dict_vectors_values, None, dict_vectors)
dict_vectors.items = new_instancemethod(_pyeqtlbma.dict_vectors_items, None, dict_vectors)
dict_vectors.__contains__ = new_instancemethod(_pyeqtlbma.dict_vectors___contains__, None, dict_vectors)
dict_vectors.key_iterator = new_instancemethod(_pyeqtlbma.dict_vectors_key_iterator, None, dict_vectors)
dict_vectors.value_iterator = new_instancemethod(_pyeqtlbma.dict_vectors_value_iterator, None, dict_vectors)
dict_vectors.__setitem__ = new_instancemethod(_pyeqtlbma.dict_vectors___setitem__, None, dict_vectors)
dict_vectors.asdict = new_instancemethod(_pyeqtlbma.dict_vectors_asdict, None, dict_vectors)
dict_vectors.empty = new_instancemethod(_pyeqtlbma.dict_vectors_empty, None, dict_vectors)
dict_vectors.size = new_instancemethod(_pyeqtlbma.dict_vectors_size, None, dict_vectors)
dict_vectors.swap = new_instancemethod(_pyeqtlbma.dict_vectors_swap, None, dict_vectors)
dict_vectors.begin = new_instancemethod(_pyeqtlbma.dict_vectors_begin, None, dict_vectors)
dict_vectors.end = new_instancemethod(_pyeqtlbma.dict_vectors_end, None, dict_vectors)
dict_vectors.rbegin = new_instancemethod(_pyeqtlbma.dict_vectors_rbegin, None, dict_vectors)
dict_vectors.rend = new_instancemethod(_pyeqtlbma.dict_vectors_rend, None, dict_vectors)
dict_vectors.clear = new_instancemethod(_pyeqtlbma.dict_vectors_clear, None, dict_vectors)
dict_vectors.get_allocator = new_instancemethod(_pyeqtlbma.dict_vectors_get_allocator, None, dict_vectors)
dict_vectors.count = new_instancemethod(_pyeqtlbma.dict_vectors_count, None, dict_vectors)
dict_vectors.erase = new_instancemethod(_pyeqtlbma.dict_vectors_erase, None, dict_vectors)
dict_vectors.find = new_instancemethod(_pyeqtlbma.dict_vectors_find, None, dict_vectors)
dict_vectors.lower_bound = new_instancemethod(_pyeqtlbma.dict_vectors_lower_bound, None, dict_vectors)
dict_vectors.upper_bound = new_instancemethod(_pyeqtlbma.dict_vectors_upper_bound, None, dict_vectors)
dict_vectors_swigregister = _pyeqtlbma.dict_vectors_swigregister
dict_vectors_swigregister(dict_vectors)

class dict_vectorf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_vectorf_swiginit(self, _pyeqtlbma.new_dict_vectorf(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_vectorf
dict_vectorf.iterator = new_instancemethod(_pyeqtlbma.dict_vectorf_iterator, None, dict_vectorf)
dict_vectorf.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_vectorf___nonzero__, None, dict_vectorf)
dict_vectorf.__bool__ = new_instancemethod(_pyeqtlbma.dict_vectorf___bool__, None, dict_vectorf)
dict_vectorf.__len__ = new_instancemethod(_pyeqtlbma.dict_vectorf___len__, None, dict_vectorf)
dict_vectorf.__getitem__ = new_instancemethod(_pyeqtlbma.dict_vectorf___getitem__, None, dict_vectorf)
dict_vectorf.__delitem__ = new_instancemethod(_pyeqtlbma.dict_vectorf___delitem__, None, dict_vectorf)
dict_vectorf.has_key = new_instancemethod(_pyeqtlbma.dict_vectorf_has_key, None, dict_vectorf)
dict_vectorf.keys = new_instancemethod(_pyeqtlbma.dict_vectorf_keys, None, dict_vectorf)
dict_vectorf.values = new_instancemethod(_pyeqtlbma.dict_vectorf_values, None, dict_vectorf)
dict_vectorf.items = new_instancemethod(_pyeqtlbma.dict_vectorf_items, None, dict_vectorf)
dict_vectorf.__contains__ = new_instancemethod(_pyeqtlbma.dict_vectorf___contains__, None, dict_vectorf)
dict_vectorf.key_iterator = new_instancemethod(_pyeqtlbma.dict_vectorf_key_iterator, None, dict_vectorf)
dict_vectorf.value_iterator = new_instancemethod(_pyeqtlbma.dict_vectorf_value_iterator, None, dict_vectorf)
dict_vectorf.__setitem__ = new_instancemethod(_pyeqtlbma.dict_vectorf___setitem__, None, dict_vectorf)
dict_vectorf.asdict = new_instancemethod(_pyeqtlbma.dict_vectorf_asdict, None, dict_vectorf)
dict_vectorf.empty = new_instancemethod(_pyeqtlbma.dict_vectorf_empty, None, dict_vectorf)
dict_vectorf.size = new_instancemethod(_pyeqtlbma.dict_vectorf_size, None, dict_vectorf)
dict_vectorf.swap = new_instancemethod(_pyeqtlbma.dict_vectorf_swap, None, dict_vectorf)
dict_vectorf.begin = new_instancemethod(_pyeqtlbma.dict_vectorf_begin, None, dict_vectorf)
dict_vectorf.end = new_instancemethod(_pyeqtlbma.dict_vectorf_end, None, dict_vectorf)
dict_vectorf.rbegin = new_instancemethod(_pyeqtlbma.dict_vectorf_rbegin, None, dict_vectorf)
dict_vectorf.rend = new_instancemethod(_pyeqtlbma.dict_vectorf_rend, None, dict_vectorf)
dict_vectorf.clear = new_instancemethod(_pyeqtlbma.dict_vectorf_clear, None, dict_vectorf)
dict_vectorf.get_allocator = new_instancemethod(_pyeqtlbma.dict_vectorf_get_allocator, None, dict_vectorf)
dict_vectorf.count = new_instancemethod(_pyeqtlbma.dict_vectorf_count, None, dict_vectorf)
dict_vectorf.erase = new_instancemethod(_pyeqtlbma.dict_vectorf_erase, None, dict_vectorf)
dict_vectorf.find = new_instancemethod(_pyeqtlbma.dict_vectorf_find, None, dict_vectorf)
dict_vectorf.lower_bound = new_instancemethod(_pyeqtlbma.dict_vectorf_lower_bound, None, dict_vectorf)
dict_vectorf.upper_bound = new_instancemethod(_pyeqtlbma.dict_vectorf_upper_bound, None, dict_vectorf)
dict_vectorf_swigregister = _pyeqtlbma.dict_vectorf_swigregister
dict_vectorf_swigregister(dict_vectorf)

class dict_vectori(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_vectori_swiginit(self, _pyeqtlbma.new_dict_vectori(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_vectori
dict_vectori.iterator = new_instancemethod(_pyeqtlbma.dict_vectori_iterator, None, dict_vectori)
dict_vectori.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_vectori___nonzero__, None, dict_vectori)
dict_vectori.__bool__ = new_instancemethod(_pyeqtlbma.dict_vectori___bool__, None, dict_vectori)
dict_vectori.__len__ = new_instancemethod(_pyeqtlbma.dict_vectori___len__, None, dict_vectori)
dict_vectori.__getitem__ = new_instancemethod(_pyeqtlbma.dict_vectori___getitem__, None, dict_vectori)
dict_vectori.__delitem__ = new_instancemethod(_pyeqtlbma.dict_vectori___delitem__, None, dict_vectori)
dict_vectori.has_key = new_instancemethod(_pyeqtlbma.dict_vectori_has_key, None, dict_vectori)
dict_vectori.keys = new_instancemethod(_pyeqtlbma.dict_vectori_keys, None, dict_vectori)
dict_vectori.values = new_instancemethod(_pyeqtlbma.dict_vectori_values, None, dict_vectori)
dict_vectori.items = new_instancemethod(_pyeqtlbma.dict_vectori_items, None, dict_vectori)
dict_vectori.__contains__ = new_instancemethod(_pyeqtlbma.dict_vectori___contains__, None, dict_vectori)
dict_vectori.key_iterator = new_instancemethod(_pyeqtlbma.dict_vectori_key_iterator, None, dict_vectori)
dict_vectori.value_iterator = new_instancemethod(_pyeqtlbma.dict_vectori_value_iterator, None, dict_vectori)
dict_vectori.__setitem__ = new_instancemethod(_pyeqtlbma.dict_vectori___setitem__, None, dict_vectori)
dict_vectori.asdict = new_instancemethod(_pyeqtlbma.dict_vectori_asdict, None, dict_vectori)
dict_vectori.empty = new_instancemethod(_pyeqtlbma.dict_vectori_empty, None, dict_vectori)
dict_vectori.size = new_instancemethod(_pyeqtlbma.dict_vectori_size, None, dict_vectori)
dict_vectori.swap = new_instancemethod(_pyeqtlbma.dict_vectori_swap, None, dict_vectori)
dict_vectori.begin = new_instancemethod(_pyeqtlbma.dict_vectori_begin, None, dict_vectori)
dict_vectori.end = new_instancemethod(_pyeqtlbma.dict_vectori_end, None, dict_vectori)
dict_vectori.rbegin = new_instancemethod(_pyeqtlbma.dict_vectori_rbegin, None, dict_vectori)
dict_vectori.rend = new_instancemethod(_pyeqtlbma.dict_vectori_rend, None, dict_vectori)
dict_vectori.clear = new_instancemethod(_pyeqtlbma.dict_vectori_clear, None, dict_vectori)
dict_vectori.get_allocator = new_instancemethod(_pyeqtlbma.dict_vectori_get_allocator, None, dict_vectori)
dict_vectori.count = new_instancemethod(_pyeqtlbma.dict_vectori_count, None, dict_vectori)
dict_vectori.erase = new_instancemethod(_pyeqtlbma.dict_vectori_erase, None, dict_vectori)
dict_vectori.find = new_instancemethod(_pyeqtlbma.dict_vectori_find, None, dict_vectori)
dict_vectori.lower_bound = new_instancemethod(_pyeqtlbma.dict_vectori_lower_bound, None, dict_vectori)
dict_vectori.upper_bound = new_instancemethod(_pyeqtlbma.dict_vectori_upper_bound, None, dict_vectori)
dict_vectori_swigregister = _pyeqtlbma.dict_vectori_swigregister
dict_vectori_swigregister(dict_vectori)

class dict_matrixi(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_matrixi_swiginit(self, _pyeqtlbma.new_dict_matrixi(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_matrixi
dict_matrixi.iterator = new_instancemethod(_pyeqtlbma.dict_matrixi_iterator, None, dict_matrixi)
dict_matrixi.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_matrixi___nonzero__, None, dict_matrixi)
dict_matrixi.__bool__ = new_instancemethod(_pyeqtlbma.dict_matrixi___bool__, None, dict_matrixi)
dict_matrixi.__len__ = new_instancemethod(_pyeqtlbma.dict_matrixi___len__, None, dict_matrixi)
dict_matrixi.__getitem__ = new_instancemethod(_pyeqtlbma.dict_matrixi___getitem__, None, dict_matrixi)
dict_matrixi.__delitem__ = new_instancemethod(_pyeqtlbma.dict_matrixi___delitem__, None, dict_matrixi)
dict_matrixi.has_key = new_instancemethod(_pyeqtlbma.dict_matrixi_has_key, None, dict_matrixi)
dict_matrixi.keys = new_instancemethod(_pyeqtlbma.dict_matrixi_keys, None, dict_matrixi)
dict_matrixi.values = new_instancemethod(_pyeqtlbma.dict_matrixi_values, None, dict_matrixi)
dict_matrixi.items = new_instancemethod(_pyeqtlbma.dict_matrixi_items, None, dict_matrixi)
dict_matrixi.__contains__ = new_instancemethod(_pyeqtlbma.dict_matrixi___contains__, None, dict_matrixi)
dict_matrixi.key_iterator = new_instancemethod(_pyeqtlbma.dict_matrixi_key_iterator, None, dict_matrixi)
dict_matrixi.value_iterator = new_instancemethod(_pyeqtlbma.dict_matrixi_value_iterator, None, dict_matrixi)
dict_matrixi.__setitem__ = new_instancemethod(_pyeqtlbma.dict_matrixi___setitem__, None, dict_matrixi)
dict_matrixi.asdict = new_instancemethod(_pyeqtlbma.dict_matrixi_asdict, None, dict_matrixi)
dict_matrixi.empty = new_instancemethod(_pyeqtlbma.dict_matrixi_empty, None, dict_matrixi)
dict_matrixi.size = new_instancemethod(_pyeqtlbma.dict_matrixi_size, None, dict_matrixi)
dict_matrixi.swap = new_instancemethod(_pyeqtlbma.dict_matrixi_swap, None, dict_matrixi)
dict_matrixi.begin = new_instancemethod(_pyeqtlbma.dict_matrixi_begin, None, dict_matrixi)
dict_matrixi.end = new_instancemethod(_pyeqtlbma.dict_matrixi_end, None, dict_matrixi)
dict_matrixi.rbegin = new_instancemethod(_pyeqtlbma.dict_matrixi_rbegin, None, dict_matrixi)
dict_matrixi.rend = new_instancemethod(_pyeqtlbma.dict_matrixi_rend, None, dict_matrixi)
dict_matrixi.clear = new_instancemethod(_pyeqtlbma.dict_matrixi_clear, None, dict_matrixi)
dict_matrixi.get_allocator = new_instancemethod(_pyeqtlbma.dict_matrixi_get_allocator, None, dict_matrixi)
dict_matrixi.count = new_instancemethod(_pyeqtlbma.dict_matrixi_count, None, dict_matrixi)
dict_matrixi.erase = new_instancemethod(_pyeqtlbma.dict_matrixi_erase, None, dict_matrixi)
dict_matrixi.find = new_instancemethod(_pyeqtlbma.dict_matrixi_find, None, dict_matrixi)
dict_matrixi.lower_bound = new_instancemethod(_pyeqtlbma.dict_matrixi_lower_bound, None, dict_matrixi)
dict_matrixi.upper_bound = new_instancemethod(_pyeqtlbma.dict_matrixi_upper_bound, None, dict_matrixi)
dict_matrixi_swigregister = _pyeqtlbma.dict_matrixi_swigregister
dict_matrixi_swigregister(dict_matrixi)

class dict_matrixf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_matrixf_swiginit(self, _pyeqtlbma.new_dict_matrixf(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_matrixf
dict_matrixf.iterator = new_instancemethod(_pyeqtlbma.dict_matrixf_iterator, None, dict_matrixf)
dict_matrixf.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_matrixf___nonzero__, None, dict_matrixf)
dict_matrixf.__bool__ = new_instancemethod(_pyeqtlbma.dict_matrixf___bool__, None, dict_matrixf)
dict_matrixf.__len__ = new_instancemethod(_pyeqtlbma.dict_matrixf___len__, None, dict_matrixf)
dict_matrixf.__getitem__ = new_instancemethod(_pyeqtlbma.dict_matrixf___getitem__, None, dict_matrixf)
dict_matrixf.__delitem__ = new_instancemethod(_pyeqtlbma.dict_matrixf___delitem__, None, dict_matrixf)
dict_matrixf.has_key = new_instancemethod(_pyeqtlbma.dict_matrixf_has_key, None, dict_matrixf)
dict_matrixf.keys = new_instancemethod(_pyeqtlbma.dict_matrixf_keys, None, dict_matrixf)
dict_matrixf.values = new_instancemethod(_pyeqtlbma.dict_matrixf_values, None, dict_matrixf)
dict_matrixf.items = new_instancemethod(_pyeqtlbma.dict_matrixf_items, None, dict_matrixf)
dict_matrixf.__contains__ = new_instancemethod(_pyeqtlbma.dict_matrixf___contains__, None, dict_matrixf)
dict_matrixf.key_iterator = new_instancemethod(_pyeqtlbma.dict_matrixf_key_iterator, None, dict_matrixf)
dict_matrixf.value_iterator = new_instancemethod(_pyeqtlbma.dict_matrixf_value_iterator, None, dict_matrixf)
dict_matrixf.__setitem__ = new_instancemethod(_pyeqtlbma.dict_matrixf___setitem__, None, dict_matrixf)
dict_matrixf.asdict = new_instancemethod(_pyeqtlbma.dict_matrixf_asdict, None, dict_matrixf)
dict_matrixf.empty = new_instancemethod(_pyeqtlbma.dict_matrixf_empty, None, dict_matrixf)
dict_matrixf.size = new_instancemethod(_pyeqtlbma.dict_matrixf_size, None, dict_matrixf)
dict_matrixf.swap = new_instancemethod(_pyeqtlbma.dict_matrixf_swap, None, dict_matrixf)
dict_matrixf.begin = new_instancemethod(_pyeqtlbma.dict_matrixf_begin, None, dict_matrixf)
dict_matrixf.end = new_instancemethod(_pyeqtlbma.dict_matrixf_end, None, dict_matrixf)
dict_matrixf.rbegin = new_instancemethod(_pyeqtlbma.dict_matrixf_rbegin, None, dict_matrixf)
dict_matrixf.rend = new_instancemethod(_pyeqtlbma.dict_matrixf_rend, None, dict_matrixf)
dict_matrixf.clear = new_instancemethod(_pyeqtlbma.dict_matrixf_clear, None, dict_matrixf)
dict_matrixf.get_allocator = new_instancemethod(_pyeqtlbma.dict_matrixf_get_allocator, None, dict_matrixf)
dict_matrixf.count = new_instancemethod(_pyeqtlbma.dict_matrixf_count, None, dict_matrixf)
dict_matrixf.erase = new_instancemethod(_pyeqtlbma.dict_matrixf_erase, None, dict_matrixf)
dict_matrixf.find = new_instancemethod(_pyeqtlbma.dict_matrixf_find, None, dict_matrixf)
dict_matrixf.lower_bound = new_instancemethod(_pyeqtlbma.dict_matrixf_lower_bound, None, dict_matrixf)
dict_matrixf.upper_bound = new_instancemethod(_pyeqtlbma.dict_matrixf_upper_bound, None, dict_matrixf)
dict_matrixf_swigregister = _pyeqtlbma.dict_matrixf_swigregister
dict_matrixf_swigregister(dict_matrixf)

class dict_x2_matrixf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_x2_matrixf_swiginit(self, _pyeqtlbma.new_dict_x2_matrixf(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_x2_matrixf
dict_x2_matrixf.iterator = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_iterator, None, dict_x2_matrixf)
dict_x2_matrixf.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_x2_matrixf___nonzero__, None, dict_x2_matrixf)
dict_x2_matrixf.__bool__ = new_instancemethod(_pyeqtlbma.dict_x2_matrixf___bool__, None, dict_x2_matrixf)
dict_x2_matrixf.__len__ = new_instancemethod(_pyeqtlbma.dict_x2_matrixf___len__, None, dict_x2_matrixf)
dict_x2_matrixf.__getitem__ = new_instancemethod(_pyeqtlbma.dict_x2_matrixf___getitem__, None, dict_x2_matrixf)
dict_x2_matrixf.__delitem__ = new_instancemethod(_pyeqtlbma.dict_x2_matrixf___delitem__, None, dict_x2_matrixf)
dict_x2_matrixf.has_key = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_has_key, None, dict_x2_matrixf)
dict_x2_matrixf.keys = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_keys, None, dict_x2_matrixf)
dict_x2_matrixf.values = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_values, None, dict_x2_matrixf)
dict_x2_matrixf.items = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_items, None, dict_x2_matrixf)
dict_x2_matrixf.__contains__ = new_instancemethod(_pyeqtlbma.dict_x2_matrixf___contains__, None, dict_x2_matrixf)
dict_x2_matrixf.key_iterator = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_key_iterator, None, dict_x2_matrixf)
dict_x2_matrixf.value_iterator = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_value_iterator, None, dict_x2_matrixf)
dict_x2_matrixf.__setitem__ = new_instancemethod(_pyeqtlbma.dict_x2_matrixf___setitem__, None, dict_x2_matrixf)
dict_x2_matrixf.asdict = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_asdict, None, dict_x2_matrixf)
dict_x2_matrixf.empty = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_empty, None, dict_x2_matrixf)
dict_x2_matrixf.size = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_size, None, dict_x2_matrixf)
dict_x2_matrixf.swap = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_swap, None, dict_x2_matrixf)
dict_x2_matrixf.begin = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_begin, None, dict_x2_matrixf)
dict_x2_matrixf.end = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_end, None, dict_x2_matrixf)
dict_x2_matrixf.rbegin = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_rbegin, None, dict_x2_matrixf)
dict_x2_matrixf.rend = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_rend, None, dict_x2_matrixf)
dict_x2_matrixf.clear = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_clear, None, dict_x2_matrixf)
dict_x2_matrixf.get_allocator = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_get_allocator, None, dict_x2_matrixf)
dict_x2_matrixf.count = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_count, None, dict_x2_matrixf)
dict_x2_matrixf.erase = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_erase, None, dict_x2_matrixf)
dict_x2_matrixf.find = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_find, None, dict_x2_matrixf)
dict_x2_matrixf.lower_bound = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_lower_bound, None, dict_x2_matrixf)
dict_x2_matrixf.upper_bound = new_instancemethod(_pyeqtlbma.dict_x2_matrixf_upper_bound, None, dict_x2_matrixf)
dict_x2_matrixf_swigregister = _pyeqtlbma.dict_x2_matrixf_swigregister
dict_x2_matrixf_swigregister(dict_x2_matrixf)

class dict_x2_vectors(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_x2_vectors_swiginit(self, _pyeqtlbma.new_dict_x2_vectors(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_x2_vectors
dict_x2_vectors.iterator = new_instancemethod(_pyeqtlbma.dict_x2_vectors_iterator, None, dict_x2_vectors)
dict_x2_vectors.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_x2_vectors___nonzero__, None, dict_x2_vectors)
dict_x2_vectors.__bool__ = new_instancemethod(_pyeqtlbma.dict_x2_vectors___bool__, None, dict_x2_vectors)
dict_x2_vectors.__len__ = new_instancemethod(_pyeqtlbma.dict_x2_vectors___len__, None, dict_x2_vectors)
dict_x2_vectors.__getitem__ = new_instancemethod(_pyeqtlbma.dict_x2_vectors___getitem__, None, dict_x2_vectors)
dict_x2_vectors.__delitem__ = new_instancemethod(_pyeqtlbma.dict_x2_vectors___delitem__, None, dict_x2_vectors)
dict_x2_vectors.has_key = new_instancemethod(_pyeqtlbma.dict_x2_vectors_has_key, None, dict_x2_vectors)
dict_x2_vectors.keys = new_instancemethod(_pyeqtlbma.dict_x2_vectors_keys, None, dict_x2_vectors)
dict_x2_vectors.values = new_instancemethod(_pyeqtlbma.dict_x2_vectors_values, None, dict_x2_vectors)
dict_x2_vectors.items = new_instancemethod(_pyeqtlbma.dict_x2_vectors_items, None, dict_x2_vectors)
dict_x2_vectors.__contains__ = new_instancemethod(_pyeqtlbma.dict_x2_vectors___contains__, None, dict_x2_vectors)
dict_x2_vectors.key_iterator = new_instancemethod(_pyeqtlbma.dict_x2_vectors_key_iterator, None, dict_x2_vectors)
dict_x2_vectors.value_iterator = new_instancemethod(_pyeqtlbma.dict_x2_vectors_value_iterator, None, dict_x2_vectors)
dict_x2_vectors.__setitem__ = new_instancemethod(_pyeqtlbma.dict_x2_vectors___setitem__, None, dict_x2_vectors)
dict_x2_vectors.asdict = new_instancemethod(_pyeqtlbma.dict_x2_vectors_asdict, None, dict_x2_vectors)
dict_x2_vectors.empty = new_instancemethod(_pyeqtlbma.dict_x2_vectors_empty, None, dict_x2_vectors)
dict_x2_vectors.size = new_instancemethod(_pyeqtlbma.dict_x2_vectors_size, None, dict_x2_vectors)
dict_x2_vectors.swap = new_instancemethod(_pyeqtlbma.dict_x2_vectors_swap, None, dict_x2_vectors)
dict_x2_vectors.begin = new_instancemethod(_pyeqtlbma.dict_x2_vectors_begin, None, dict_x2_vectors)
dict_x2_vectors.end = new_instancemethod(_pyeqtlbma.dict_x2_vectors_end, None, dict_x2_vectors)
dict_x2_vectors.rbegin = new_instancemethod(_pyeqtlbma.dict_x2_vectors_rbegin, None, dict_x2_vectors)
dict_x2_vectors.rend = new_instancemethod(_pyeqtlbma.dict_x2_vectors_rend, None, dict_x2_vectors)
dict_x2_vectors.clear = new_instancemethod(_pyeqtlbma.dict_x2_vectors_clear, None, dict_x2_vectors)
dict_x2_vectors.get_allocator = new_instancemethod(_pyeqtlbma.dict_x2_vectors_get_allocator, None, dict_x2_vectors)
dict_x2_vectors.count = new_instancemethod(_pyeqtlbma.dict_x2_vectors_count, None, dict_x2_vectors)
dict_x2_vectors.erase = new_instancemethod(_pyeqtlbma.dict_x2_vectors_erase, None, dict_x2_vectors)
dict_x2_vectors.find = new_instancemethod(_pyeqtlbma.dict_x2_vectors_find, None, dict_x2_vectors)
dict_x2_vectors.lower_bound = new_instancemethod(_pyeqtlbma.dict_x2_vectors_lower_bound, None, dict_x2_vectors)
dict_x2_vectors.upper_bound = new_instancemethod(_pyeqtlbma.dict_x2_vectors_upper_bound, None, dict_x2_vectors)
dict_x2_vectors_swigregister = _pyeqtlbma.dict_x2_vectors_swigregister
dict_x2_vectors_swigregister(dict_x2_vectors)

class dict_string(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_string_swiginit(self, _pyeqtlbma.new_dict_string(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_string
dict_string.iterator = new_instancemethod(_pyeqtlbma.dict_string_iterator, None, dict_string)
dict_string.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_string___nonzero__, None, dict_string)
dict_string.__bool__ = new_instancemethod(_pyeqtlbma.dict_string___bool__, None, dict_string)
dict_string.__len__ = new_instancemethod(_pyeqtlbma.dict_string___len__, None, dict_string)
dict_string.__getitem__ = new_instancemethod(_pyeqtlbma.dict_string___getitem__, None, dict_string)
dict_string.__delitem__ = new_instancemethod(_pyeqtlbma.dict_string___delitem__, None, dict_string)
dict_string.has_key = new_instancemethod(_pyeqtlbma.dict_string_has_key, None, dict_string)
dict_string.keys = new_instancemethod(_pyeqtlbma.dict_string_keys, None, dict_string)
dict_string.values = new_instancemethod(_pyeqtlbma.dict_string_values, None, dict_string)
dict_string.items = new_instancemethod(_pyeqtlbma.dict_string_items, None, dict_string)
dict_string.__contains__ = new_instancemethod(_pyeqtlbma.dict_string___contains__, None, dict_string)
dict_string.key_iterator = new_instancemethod(_pyeqtlbma.dict_string_key_iterator, None, dict_string)
dict_string.value_iterator = new_instancemethod(_pyeqtlbma.dict_string_value_iterator, None, dict_string)
dict_string.__setitem__ = new_instancemethod(_pyeqtlbma.dict_string___setitem__, None, dict_string)
dict_string.asdict = new_instancemethod(_pyeqtlbma.dict_string_asdict, None, dict_string)
dict_string.empty = new_instancemethod(_pyeqtlbma.dict_string_empty, None, dict_string)
dict_string.size = new_instancemethod(_pyeqtlbma.dict_string_size, None, dict_string)
dict_string.swap = new_instancemethod(_pyeqtlbma.dict_string_swap, None, dict_string)
dict_string.begin = new_instancemethod(_pyeqtlbma.dict_string_begin, None, dict_string)
dict_string.end = new_instancemethod(_pyeqtlbma.dict_string_end, None, dict_string)
dict_string.rbegin = new_instancemethod(_pyeqtlbma.dict_string_rbegin, None, dict_string)
dict_string.rend = new_instancemethod(_pyeqtlbma.dict_string_rend, None, dict_string)
dict_string.clear = new_instancemethod(_pyeqtlbma.dict_string_clear, None, dict_string)
dict_string.get_allocator = new_instancemethod(_pyeqtlbma.dict_string_get_allocator, None, dict_string)
dict_string.count = new_instancemethod(_pyeqtlbma.dict_string_count, None, dict_string)
dict_string.erase = new_instancemethod(_pyeqtlbma.dict_string_erase, None, dict_string)
dict_string.find = new_instancemethod(_pyeqtlbma.dict_string_find, None, dict_string)
dict_string.lower_bound = new_instancemethod(_pyeqtlbma.dict_string_lower_bound, None, dict_string)
dict_string.upper_bound = new_instancemethod(_pyeqtlbma.dict_string_upper_bound, None, dict_string)
dict_string_swigregister = _pyeqtlbma.dict_string_swigregister
dict_string_swigregister(dict_string)

class dict_int(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_int_swiginit(self, _pyeqtlbma.new_dict_int(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_int
dict_int.iterator = new_instancemethod(_pyeqtlbma.dict_int_iterator, None, dict_int)
dict_int.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_int___nonzero__, None, dict_int)
dict_int.__bool__ = new_instancemethod(_pyeqtlbma.dict_int___bool__, None, dict_int)
dict_int.__len__ = new_instancemethod(_pyeqtlbma.dict_int___len__, None, dict_int)
dict_int.__getitem__ = new_instancemethod(_pyeqtlbma.dict_int___getitem__, None, dict_int)
dict_int.__delitem__ = new_instancemethod(_pyeqtlbma.dict_int___delitem__, None, dict_int)
dict_int.has_key = new_instancemethod(_pyeqtlbma.dict_int_has_key, None, dict_int)
dict_int.keys = new_instancemethod(_pyeqtlbma.dict_int_keys, None, dict_int)
dict_int.values = new_instancemethod(_pyeqtlbma.dict_int_values, None, dict_int)
dict_int.items = new_instancemethod(_pyeqtlbma.dict_int_items, None, dict_int)
dict_int.__contains__ = new_instancemethod(_pyeqtlbma.dict_int___contains__, None, dict_int)
dict_int.key_iterator = new_instancemethod(_pyeqtlbma.dict_int_key_iterator, None, dict_int)
dict_int.value_iterator = new_instancemethod(_pyeqtlbma.dict_int_value_iterator, None, dict_int)
dict_int.__setitem__ = new_instancemethod(_pyeqtlbma.dict_int___setitem__, None, dict_int)
dict_int.asdict = new_instancemethod(_pyeqtlbma.dict_int_asdict, None, dict_int)
dict_int.empty = new_instancemethod(_pyeqtlbma.dict_int_empty, None, dict_int)
dict_int.size = new_instancemethod(_pyeqtlbma.dict_int_size, None, dict_int)
dict_int.swap = new_instancemethod(_pyeqtlbma.dict_int_swap, None, dict_int)
dict_int.begin = new_instancemethod(_pyeqtlbma.dict_int_begin, None, dict_int)
dict_int.end = new_instancemethod(_pyeqtlbma.dict_int_end, None, dict_int)
dict_int.rbegin = new_instancemethod(_pyeqtlbma.dict_int_rbegin, None, dict_int)
dict_int.rend = new_instancemethod(_pyeqtlbma.dict_int_rend, None, dict_int)
dict_int.clear = new_instancemethod(_pyeqtlbma.dict_int_clear, None, dict_int)
dict_int.get_allocator = new_instancemethod(_pyeqtlbma.dict_int_get_allocator, None, dict_int)
dict_int.count = new_instancemethod(_pyeqtlbma.dict_int_count, None, dict_int)
dict_int.erase = new_instancemethod(_pyeqtlbma.dict_int_erase, None, dict_int)
dict_int.find = new_instancemethod(_pyeqtlbma.dict_int_find, None, dict_int)
dict_int.lower_bound = new_instancemethod(_pyeqtlbma.dict_int_lower_bound, None, dict_int)
dict_int.upper_bound = new_instancemethod(_pyeqtlbma.dict_int_upper_bound, None, dict_int)
dict_int_swigregister = _pyeqtlbma.dict_int_swigregister
dict_int_swigregister(dict_int)

class dict_float(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_float_swiginit(self, _pyeqtlbma.new_dict_float(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_float
dict_float.iterator = new_instancemethod(_pyeqtlbma.dict_float_iterator, None, dict_float)
dict_float.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_float___nonzero__, None, dict_float)
dict_float.__bool__ = new_instancemethod(_pyeqtlbma.dict_float___bool__, None, dict_float)
dict_float.__len__ = new_instancemethod(_pyeqtlbma.dict_float___len__, None, dict_float)
dict_float.__getitem__ = new_instancemethod(_pyeqtlbma.dict_float___getitem__, None, dict_float)
dict_float.__delitem__ = new_instancemethod(_pyeqtlbma.dict_float___delitem__, None, dict_float)
dict_float.has_key = new_instancemethod(_pyeqtlbma.dict_float_has_key, None, dict_float)
dict_float.keys = new_instancemethod(_pyeqtlbma.dict_float_keys, None, dict_float)
dict_float.values = new_instancemethod(_pyeqtlbma.dict_float_values, None, dict_float)
dict_float.items = new_instancemethod(_pyeqtlbma.dict_float_items, None, dict_float)
dict_float.__contains__ = new_instancemethod(_pyeqtlbma.dict_float___contains__, None, dict_float)
dict_float.key_iterator = new_instancemethod(_pyeqtlbma.dict_float_key_iterator, None, dict_float)
dict_float.value_iterator = new_instancemethod(_pyeqtlbma.dict_float_value_iterator, None, dict_float)
dict_float.__setitem__ = new_instancemethod(_pyeqtlbma.dict_float___setitem__, None, dict_float)
dict_float.asdict = new_instancemethod(_pyeqtlbma.dict_float_asdict, None, dict_float)
dict_float.empty = new_instancemethod(_pyeqtlbma.dict_float_empty, None, dict_float)
dict_float.size = new_instancemethod(_pyeqtlbma.dict_float_size, None, dict_float)
dict_float.swap = new_instancemethod(_pyeqtlbma.dict_float_swap, None, dict_float)
dict_float.begin = new_instancemethod(_pyeqtlbma.dict_float_begin, None, dict_float)
dict_float.end = new_instancemethod(_pyeqtlbma.dict_float_end, None, dict_float)
dict_float.rbegin = new_instancemethod(_pyeqtlbma.dict_float_rbegin, None, dict_float)
dict_float.rend = new_instancemethod(_pyeqtlbma.dict_float_rend, None, dict_float)
dict_float.clear = new_instancemethod(_pyeqtlbma.dict_float_clear, None, dict_float)
dict_float.get_allocator = new_instancemethod(_pyeqtlbma.dict_float_get_allocator, None, dict_float)
dict_float.count = new_instancemethod(_pyeqtlbma.dict_float_count, None, dict_float)
dict_float.erase = new_instancemethod(_pyeqtlbma.dict_float_erase, None, dict_float)
dict_float.find = new_instancemethod(_pyeqtlbma.dict_float_find, None, dict_float)
dict_float.lower_bound = new_instancemethod(_pyeqtlbma.dict_float_lower_bound, None, dict_float)
dict_float.upper_bound = new_instancemethod(_pyeqtlbma.dict_float_upper_bound, None, dict_float)
dict_float_swigregister = _pyeqtlbma.dict_float_swigregister
dict_float_swigregister(dict_float)

class dict_x2_float(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_x2_float_swiginit(self, _pyeqtlbma.new_dict_x2_float(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_x2_float
dict_x2_float.iterator = new_instancemethod(_pyeqtlbma.dict_x2_float_iterator, None, dict_x2_float)
dict_x2_float.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_x2_float___nonzero__, None, dict_x2_float)
dict_x2_float.__bool__ = new_instancemethod(_pyeqtlbma.dict_x2_float___bool__, None, dict_x2_float)
dict_x2_float.__len__ = new_instancemethod(_pyeqtlbma.dict_x2_float___len__, None, dict_x2_float)
dict_x2_float.__getitem__ = new_instancemethod(_pyeqtlbma.dict_x2_float___getitem__, None, dict_x2_float)
dict_x2_float.__delitem__ = new_instancemethod(_pyeqtlbma.dict_x2_float___delitem__, None, dict_x2_float)
dict_x2_float.has_key = new_instancemethod(_pyeqtlbma.dict_x2_float_has_key, None, dict_x2_float)
dict_x2_float.keys = new_instancemethod(_pyeqtlbma.dict_x2_float_keys, None, dict_x2_float)
dict_x2_float.values = new_instancemethod(_pyeqtlbma.dict_x2_float_values, None, dict_x2_float)
dict_x2_float.items = new_instancemethod(_pyeqtlbma.dict_x2_float_items, None, dict_x2_float)
dict_x2_float.__contains__ = new_instancemethod(_pyeqtlbma.dict_x2_float___contains__, None, dict_x2_float)
dict_x2_float.key_iterator = new_instancemethod(_pyeqtlbma.dict_x2_float_key_iterator, None, dict_x2_float)
dict_x2_float.value_iterator = new_instancemethod(_pyeqtlbma.dict_x2_float_value_iterator, None, dict_x2_float)
dict_x2_float.__setitem__ = new_instancemethod(_pyeqtlbma.dict_x2_float___setitem__, None, dict_x2_float)
dict_x2_float.asdict = new_instancemethod(_pyeqtlbma.dict_x2_float_asdict, None, dict_x2_float)
dict_x2_float.empty = new_instancemethod(_pyeqtlbma.dict_x2_float_empty, None, dict_x2_float)
dict_x2_float.size = new_instancemethod(_pyeqtlbma.dict_x2_float_size, None, dict_x2_float)
dict_x2_float.swap = new_instancemethod(_pyeqtlbma.dict_x2_float_swap, None, dict_x2_float)
dict_x2_float.begin = new_instancemethod(_pyeqtlbma.dict_x2_float_begin, None, dict_x2_float)
dict_x2_float.end = new_instancemethod(_pyeqtlbma.dict_x2_float_end, None, dict_x2_float)
dict_x2_float.rbegin = new_instancemethod(_pyeqtlbma.dict_x2_float_rbegin, None, dict_x2_float)
dict_x2_float.rend = new_instancemethod(_pyeqtlbma.dict_x2_float_rend, None, dict_x2_float)
dict_x2_float.clear = new_instancemethod(_pyeqtlbma.dict_x2_float_clear, None, dict_x2_float)
dict_x2_float.get_allocator = new_instancemethod(_pyeqtlbma.dict_x2_float_get_allocator, None, dict_x2_float)
dict_x2_float.count = new_instancemethod(_pyeqtlbma.dict_x2_float_count, None, dict_x2_float)
dict_x2_float.erase = new_instancemethod(_pyeqtlbma.dict_x2_float_erase, None, dict_x2_float)
dict_x2_float.find = new_instancemethod(_pyeqtlbma.dict_x2_float_find, None, dict_x2_float)
dict_x2_float.lower_bound = new_instancemethod(_pyeqtlbma.dict_x2_float_lower_bound, None, dict_x2_float)
dict_x2_float.upper_bound = new_instancemethod(_pyeqtlbma.dict_x2_float_upper_bound, None, dict_x2_float)
dict_x2_float_swigregister = _pyeqtlbma.dict_x2_float_swigregister
dict_x2_float_swigregister(dict_x2_float)

class dict_x3_float(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_x3_float_swiginit(self, _pyeqtlbma.new_dict_x3_float(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_x3_float
dict_x3_float.iterator = new_instancemethod(_pyeqtlbma.dict_x3_float_iterator, None, dict_x3_float)
dict_x3_float.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_x3_float___nonzero__, None, dict_x3_float)
dict_x3_float.__bool__ = new_instancemethod(_pyeqtlbma.dict_x3_float___bool__, None, dict_x3_float)
dict_x3_float.__len__ = new_instancemethod(_pyeqtlbma.dict_x3_float___len__, None, dict_x3_float)
dict_x3_float.__getitem__ = new_instancemethod(_pyeqtlbma.dict_x3_float___getitem__, None, dict_x3_float)
dict_x3_float.__delitem__ = new_instancemethod(_pyeqtlbma.dict_x3_float___delitem__, None, dict_x3_float)
dict_x3_float.has_key = new_instancemethod(_pyeqtlbma.dict_x3_float_has_key, None, dict_x3_float)
dict_x3_float.keys = new_instancemethod(_pyeqtlbma.dict_x3_float_keys, None, dict_x3_float)
dict_x3_float.values = new_instancemethod(_pyeqtlbma.dict_x3_float_values, None, dict_x3_float)
dict_x3_float.items = new_instancemethod(_pyeqtlbma.dict_x3_float_items, None, dict_x3_float)
dict_x3_float.__contains__ = new_instancemethod(_pyeqtlbma.dict_x3_float___contains__, None, dict_x3_float)
dict_x3_float.key_iterator = new_instancemethod(_pyeqtlbma.dict_x3_float_key_iterator, None, dict_x3_float)
dict_x3_float.value_iterator = new_instancemethod(_pyeqtlbma.dict_x3_float_value_iterator, None, dict_x3_float)
dict_x3_float.__setitem__ = new_instancemethod(_pyeqtlbma.dict_x3_float___setitem__, None, dict_x3_float)
dict_x3_float.asdict = new_instancemethod(_pyeqtlbma.dict_x3_float_asdict, None, dict_x3_float)
dict_x3_float.empty = new_instancemethod(_pyeqtlbma.dict_x3_float_empty, None, dict_x3_float)
dict_x3_float.size = new_instancemethod(_pyeqtlbma.dict_x3_float_size, None, dict_x3_float)
dict_x3_float.swap = new_instancemethod(_pyeqtlbma.dict_x3_float_swap, None, dict_x3_float)
dict_x3_float.begin = new_instancemethod(_pyeqtlbma.dict_x3_float_begin, None, dict_x3_float)
dict_x3_float.end = new_instancemethod(_pyeqtlbma.dict_x3_float_end, None, dict_x3_float)
dict_x3_float.rbegin = new_instancemethod(_pyeqtlbma.dict_x3_float_rbegin, None, dict_x3_float)
dict_x3_float.rend = new_instancemethod(_pyeqtlbma.dict_x3_float_rend, None, dict_x3_float)
dict_x3_float.clear = new_instancemethod(_pyeqtlbma.dict_x3_float_clear, None, dict_x3_float)
dict_x3_float.get_allocator = new_instancemethod(_pyeqtlbma.dict_x3_float_get_allocator, None, dict_x3_float)
dict_x3_float.count = new_instancemethod(_pyeqtlbma.dict_x3_float_count, None, dict_x3_float)
dict_x3_float.erase = new_instancemethod(_pyeqtlbma.dict_x3_float_erase, None, dict_x3_float)
dict_x3_float.find = new_instancemethod(_pyeqtlbma.dict_x3_float_find, None, dict_x3_float)
dict_x3_float.lower_bound = new_instancemethod(_pyeqtlbma.dict_x3_float_lower_bound, None, dict_x3_float)
dict_x3_float.upper_bound = new_instancemethod(_pyeqtlbma.dict_x3_float_upper_bound, None, dict_x3_float)
dict_x3_float_swigregister = _pyeqtlbma.dict_x3_float_swigregister
dict_x3_float_swigregister(dict_x3_float)

class dict_x4_float(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __init__(self, *args):
        _pyeqtlbma.dict_x4_float_swiginit(self, _pyeqtlbma.new_dict_x4_float(*args))
    __swig_destroy__ = _pyeqtlbma.delete_dict_x4_float
dict_x4_float.iterator = new_instancemethod(_pyeqtlbma.dict_x4_float_iterator, None, dict_x4_float)
dict_x4_float.__nonzero__ = new_instancemethod(_pyeqtlbma.dict_x4_float___nonzero__, None, dict_x4_float)
dict_x4_float.__bool__ = new_instancemethod(_pyeqtlbma.dict_x4_float___bool__, None, dict_x4_float)
dict_x4_float.__len__ = new_instancemethod(_pyeqtlbma.dict_x4_float___len__, None, dict_x4_float)
dict_x4_float.__getitem__ = new_instancemethod(_pyeqtlbma.dict_x4_float___getitem__, None, dict_x4_float)
dict_x4_float.__delitem__ = new_instancemethod(_pyeqtlbma.dict_x4_float___delitem__, None, dict_x4_float)
dict_x4_float.has_key = new_instancemethod(_pyeqtlbma.dict_x4_float_has_key, None, dict_x4_float)
dict_x4_float.keys = new_instancemethod(_pyeqtlbma.dict_x4_float_keys, None, dict_x4_float)
dict_x4_float.values = new_instancemethod(_pyeqtlbma.dict_x4_float_values, None, dict_x4_float)
dict_x4_float.items = new_instancemethod(_pyeqtlbma.dict_x4_float_items, None, dict_x4_float)
dict_x4_float.__contains__ = new_instancemethod(_pyeqtlbma.dict_x4_float___contains__, None, dict_x4_float)
dict_x4_float.key_iterator = new_instancemethod(_pyeqtlbma.dict_x4_float_key_iterator, None, dict_x4_float)
dict_x4_float.value_iterator = new_instancemethod(_pyeqtlbma.dict_x4_float_value_iterator, None, dict_x4_float)
dict_x4_float.__setitem__ = new_instancemethod(_pyeqtlbma.dict_x4_float___setitem__, None, dict_x4_float)
dict_x4_float.asdict = new_instancemethod(_pyeqtlbma.dict_x4_float_asdict, None, dict_x4_float)
dict_x4_float.empty = new_instancemethod(_pyeqtlbma.dict_x4_float_empty, None, dict_x4_float)
dict_x4_float.size = new_instancemethod(_pyeqtlbma.dict_x4_float_size, None, dict_x4_float)
dict_x4_float.swap = new_instancemethod(_pyeqtlbma.dict_x4_float_swap, None, dict_x4_float)
dict_x4_float.begin = new_instancemethod(_pyeqtlbma.dict_x4_float_begin, None, dict_x4_float)
dict_x4_float.end = new_instancemethod(_pyeqtlbma.dict_x4_float_end, None, dict_x4_float)
dict_x4_float.rbegin = new_instancemethod(_pyeqtlbma.dict_x4_float_rbegin, None, dict_x4_float)
dict_x4_float.rend = new_instancemethod(_pyeqtlbma.dict_x4_float_rend, None, dict_x4_float)
dict_x4_float.clear = new_instancemethod(_pyeqtlbma.dict_x4_float_clear, None, dict_x4_float)
dict_x4_float.get_allocator = new_instancemethod(_pyeqtlbma.dict_x4_float_get_allocator, None, dict_x4_float)
dict_x4_float.count = new_instancemethod(_pyeqtlbma.dict_x4_float_count, None, dict_x4_float)
dict_x4_float.erase = new_instancemethod(_pyeqtlbma.dict_x4_float_erase, None, dict_x4_float)
dict_x4_float.find = new_instancemethod(_pyeqtlbma.dict_x4_float_find, None, dict_x4_float)
dict_x4_float.lower_bound = new_instancemethod(_pyeqtlbma.dict_x4_float_lower_bound, None, dict_x4_float)
dict_x4_float.upper_bound = new_instancemethod(_pyeqtlbma.dict_x4_float_upper_bound, None, dict_x4_float)
dict_x4_float_swigregister = _pyeqtlbma.dict_x4_float_swigregister
dict_x4_float_swigregister(dict_x4_float)

class Exception(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, msg):
        _pyeqtlbma.Exception_swiginit(self, _pyeqtlbma.new_Exception(msg))
    __swig_destroy__ = _pyeqtlbma.delete_Exception
Exception.message = new_instancemethod(_pyeqtlbma.Exception_message, None, Exception)
Exception_swigregister = _pyeqtlbma.Exception_swigregister
Exception_swigregister(Exception)

class StopIteration(Exception):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, msg):
        _pyeqtlbma.StopIteration_swiginit(self, _pyeqtlbma.new_StopIteration(msg))
    __swig_destroy__ = _pyeqtlbma.delete_StopIteration
StopIteration_swigregister = _pyeqtlbma.StopIteration_swigregister
StopIteration_swigregister(StopIteration)

class IndexError(Exception):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, msg):
        _pyeqtlbma.IndexError_swiginit(self, _pyeqtlbma.new_IndexError(msg))
    __swig_destroy__ = _pyeqtlbma.delete_IndexError
IndexError_swigregister = _pyeqtlbma.IndexError_swigregister
IndexError_swigregister(IndexError)

class ValueError(Exception):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, msg):
        _pyeqtlbma.ValueError_swiginit(self, _pyeqtlbma.new_ValueError(msg))
    __swig_destroy__ = _pyeqtlbma.delete_ValueError
ValueError_swigregister = _pyeqtlbma.ValueError_swigregister
ValueError_swigregister(ValueError)

class SystemError(Exception):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, msg):
        _pyeqtlbma.SystemError_swiginit(self, _pyeqtlbma.new_SystemError(msg))
    __swig_destroy__ = _pyeqtlbma.delete_SystemError
SystemError_swigregister = _pyeqtlbma.SystemError_swigregister
SystemError_swigregister(SystemError)

class RuntimeError(Exception):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, msg):
        _pyeqtlbma.RuntimeError_swiginit(self, _pyeqtlbma.new_RuntimeError(msg))
    __swig_destroy__ = _pyeqtlbma.delete_RuntimeError
RuntimeError_swigregister = _pyeqtlbma.RuntimeError_swigregister
RuntimeError_swigregister(RuntimeError)


def initialize():
    return _pyeqtlbma.initialize()
initialize = _pyeqtlbma.initialize
class BFCalculator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, param_s, param_i, param_f, param_vs):
        _pyeqtlbma.BFCalculator_swiginit(self, _pyeqtlbma.new_BFCalculator(param_s, param_i, param_f, param_vs))
    __swig_destroy__ = _pyeqtlbma.delete_BFCalculator
BFCalculator.apply = new_instancemethod(_pyeqtlbma.BFCalculator_apply, None, BFCalculator)
BFCalculator.GetSstats = new_instancemethod(_pyeqtlbma.BFCalculator_GetSstats, None, BFCalculator)
BFCalculator.GetSstatsRownames = new_instancemethod(_pyeqtlbma.BFCalculator_GetSstatsRownames, None, BFCalculator)
BFCalculator.GetJoinSstats = new_instancemethod(_pyeqtlbma.BFCalculator_GetJoinSstats, None, BFCalculator)
BFCalculator.GetJoinSstatsRownames = new_instancemethod(_pyeqtlbma.BFCalculator_GetJoinSstatsRownames, None, BFCalculator)
BFCalculator.GetSubgroups = new_instancemethod(_pyeqtlbma.BFCalculator_GetSubgroups, None, BFCalculator)
BFCalculator.GetSepPermPvals = new_instancemethod(_pyeqtlbma.BFCalculator_GetSepPermPvals, None, BFCalculator)
BFCalculator.GetSepPermPvalsRownames = new_instancemethod(_pyeqtlbma.BFCalculator_GetSepPermPvalsRownames, None, BFCalculator)
BFCalculator.GetJoinPermPvals = new_instancemethod(_pyeqtlbma.BFCalculator_GetJoinPermPvals, None, BFCalculator)
BFCalculator.GetJoinPermPvalsRownames = new_instancemethod(_pyeqtlbma.BFCalculator_GetJoinPermPvalsRownames, None, BFCalculator)
BFCalculator.GetAbfs = new_instancemethod(_pyeqtlbma.BFCalculator_GetAbfs, None, BFCalculator)
BFCalculator.GetAbfsNames = new_instancemethod(_pyeqtlbma.BFCalculator_GetAbfsNames, None, BFCalculator)
BFCalculator_swigregister = _pyeqtlbma.BFCalculator_swigregister
BFCalculator_swigregister(BFCalculator)


def get_eqtlbma_configurations(nb_subgroups, is_all):
    return _pyeqtlbma.get_eqtlbma_configurations(nb_subgroups, is_all)
get_eqtlbma_configurations = _pyeqtlbma.get_eqtlbma_configurations

def gsl_cdf_gaussian_P(x, sigma):
    return _pyeqtlbma.gsl_cdf_gaussian_P(x, sigma)
gsl_cdf_gaussian_P = _pyeqtlbma.gsl_cdf_gaussian_P

def gsl_cdf_gaussian_Q(x, sigma):
    return _pyeqtlbma.gsl_cdf_gaussian_Q(x, sigma)
gsl_cdf_gaussian_Q = _pyeqtlbma.gsl_cdf_gaussian_Q

def gsl_cdf_gaussian_Pinv(P, sigma):
    return _pyeqtlbma.gsl_cdf_gaussian_Pinv(P, sigma)
gsl_cdf_gaussian_Pinv = _pyeqtlbma.gsl_cdf_gaussian_Pinv

def gsl_cdf_gaussian_Qinv(Q, sigma):
    return _pyeqtlbma.gsl_cdf_gaussian_Qinv(Q, sigma)
gsl_cdf_gaussian_Qinv = _pyeqtlbma.gsl_cdf_gaussian_Qinv

def gsl_cdf_ugaussian_P(x):
    return _pyeqtlbma.gsl_cdf_ugaussian_P(x)
gsl_cdf_ugaussian_P = _pyeqtlbma.gsl_cdf_ugaussian_P

def gsl_cdf_ugaussian_Q(x):
    return _pyeqtlbma.gsl_cdf_ugaussian_Q(x)
gsl_cdf_ugaussian_Q = _pyeqtlbma.gsl_cdf_ugaussian_Q

def gsl_cdf_ugaussian_Pinv(P):
    return _pyeqtlbma.gsl_cdf_ugaussian_Pinv(P)
gsl_cdf_ugaussian_Pinv = _pyeqtlbma.gsl_cdf_ugaussian_Pinv

def gsl_cdf_ugaussian_Qinv(Q):
    return _pyeqtlbma.gsl_cdf_ugaussian_Qinv(Q)
gsl_cdf_ugaussian_Qinv = _pyeqtlbma.gsl_cdf_ugaussian_Qinv


