from OmicsBMA.core import test_association
from OmicsBMA.utils import rename_stamp
from test_utils import *
import numpy as np

configfile: "config.yaml"

rule test_association:
  threads:
    config['runtime']['thread']
  output:
    touch("test_association.done")
  run:
    test_association(config)

rule eqtlbma_bf:
  threads:
    config['runtime']['thread']
  output:
    touch("eqtlbma_bf.done")
  shell:
    '''
    eqtlbma_bf --geno {config[input][geno]} --scoord {config[input][scoord]} --exp {config[input][exp]} \
    --gcoord {config[input][gcoord]} --covar {config[input][covar]} --anchor {config[analysis][anchor]} \
    --cis {config[analysis][cis]} --lik {config[analysis][lik]} --analys {config[analysis][analys]} \
    --qnorm {config[analysis][qnorm]} --maf {config[analysis][maf]} --gridL {config[input][gridL]} \
    --gridS {config[input][gridS]} --bfs sin --error {config[analysis][error]} \
    --fiterr {config[analysis][fiterr]} --nperm {config[permutation][nperm]} \
    --seed {config[runtime][seed]} --trick {config[permutation][trick]} \
    --tricut {config[permutation][tricut]} --permsep {config[permutation][permsep]} \
    --pbf gen-sin --maxbf {config[permutation][maxbf]} \
    --verbose {config[runtime][verbose]} \
    --thread {config[runtime][thread]} --sbgrp s1+s2+s3 --out output/test_association
    '''

rule compare_output:
  input:
    "test_association.done", "eqtlbma_bf.done"
  threads:
    config['runtime']['thread']
  output:
    touch("comparison.done")
  run:
    data1 = load_omicsbma_bf(rename_stamp('output/test_association.h5'))
    data2 = load_eqtlbma_bf('output/test_association_l10abfs_raw.txt.gz')
    genes = list(data2.keys())
    for g in genes:
        snps = list(data2[g].index)
        cols = list(data2[g])
        for s in snps:
            for x, y, z in zip(data1[g].loc[s, cols], data2[g].loc[s, cols], cols):
                try:
                    np.testing.assert_almost_equal(x, y, 5)
                except:
                    print(g, s, z)
                    raise

rule all:
  input:
    "comparison.done"

rule clean:
  shell: "rm -f *.done"
