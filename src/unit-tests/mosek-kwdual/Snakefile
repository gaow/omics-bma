import numpy as np
from OmicsBMA.utils_math import test_almost_equal_recursive

rule get_test_data:
  output: "prior.txt", "init.txt", "data.txt"
  shell: "Rscript GetTestData.R"

rule fit_mix_R:
  input: rules.get_test_data.output
  output: "EM.res"
  shell: "Rscript FitMix.R &> /dev/null"

rule fit_mix_py:
  input: rules.get_test_data.output
  output: "SCOPT.res"
  shell: "python FitMix.py > COP.res"

rule compare_methods:
  threads: 8
  params:
    niter = 5, level = 6
  output: touch("done.txt")
  run:
    for i in range(params.niter):
      # run simulation & computation
      shell('''snakemake clean -q; snakemake get_test_data -q;
            snakemake fit_mix_R -q; snakemake fit_mix_py -q''')
      # Load results
      with open("EM.res") as f:
          txt = f.readlines()
          em = np.array([float(x) for x in txt[0].strip().split()])
          em_status = txt[-1].strip().upper()
      with open("COP.res") as f:
          txt = f.readlines()
          cop = np.array([float(x) for x in txt[0].strip().split()])
          cop_status = txt[-1].strip().upper()
      if em_status != "TRUE":
          print("EM did not converge")
          continue
      if cop_status != "TRUE":
          print("IP-COP did not converge")
          continue
      level = test_almost_equal_recursive(em, cop, params.level)
      print("Test %s passed at level %s!" % (i + 1, level))

rule all:
  input:
    "done.txt"

rule clean:
     shell: "rm -f *.res *.txt"
