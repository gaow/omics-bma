#!/usr/bin/env sos-runner
#vim: set filetype=python: set expandtab : ts=4:
#fileformat=SOS1.0
from OmicsBMA.utils import rename_stamp as stamp

[simulation]
pkg_dir = '../../external/eqtlbma'
output: output/stdout_tutorial_eqtlbma.txt
check_R_library('GenomicRanges')
task: workdir = 'data'
run:
  Rscript ${pkg_dir!a}/scripts/tutorial_eqtlbma.R --pkg ${pkg_dir!a} \
    --coverr 0 --ngenes 200 --asg 10 --pi0 0.3 --nsbgrps 3 >& ${output}

[eqtlbma]
output: 'output/stdout_eqtlbma_bf.txt', 'output/stdout_eqtlbma_hm.txt', 'output/stdout_eqtlbma_avg_bfs.txt'
run:
  eqtlbma_bf --geno data/list_genotypes.txt --scoord data/snp_coords.bed.gz \
    --exp data/list_phenotypes.txt --gcoord data/gene_coords.bed.gz --anchor TSS --cis 5 \
    --out output/out_eqtlbma --analys join --covar data/list_covariates.txt \
    --gridL data/grid_phi2_oma2_general.txt.gz --gridS data/grid_phi2_oma2_with-configs.txt.gz --bfs all \
    --error uvlr --outss >& ${output[0]};
  eqtlbma_hm --data output/out_eqtlbma_l10abfs_raw.txt.gz --nsubgrp 3 --dim 7 \
    --ngrid 10 --out output/out_eqtlbma_hm.txt.gz >& ${output[1]};
    zcat output/out_eqtlbma_hm.txt.gz | grep "#grid" | cut -f2 > output/grid_weights.txt;
    zcat output/out_eqtlbma_hm.txt.gz | grep "#config" \
    | awk '{split($1,a,"."); print a[2]"\\t"$2}' > output/config_weights.txt;
  eqtlbma_avg_bfs --in output/out_eqtlbma_l10abfs_raw.txt.gz --gwts output/grid_weights.txt \
    --nsubgrp 3 --dim 7 --cwts output/config_weights.txt --save post --pi0 0.3 --post a+b+c+d --bestdim \
    --alldim --out output/out_eqtlbma_avg_bfs.txt.gz >& ${output[2]}

[omicsbma_1: alias = "test_association"]
# Test for association
input: 'data/priors.h5', 'config.yaml', 'data/list_genotypes.txt',
       'data/list_phenotypes.txt', 'data/list_covariates.txt', 'data/snp_coords.bed.gz',
       'data/gene_coords.bed.gz'
output: stamp('output/sumstats.h5'), stamp('output/test_association.h5')
python:
from OmicsBMA import test_association
test_association(${input[0]!r}, ${output[0]!r}, ${output[1]!r}, ${input[1]!r},
                 ${input[2]!r}, ${input[3]!r}, ${input[4]!r}, ${input[5]!r}, ${input[6]!r})

[omicsbma_2: alias = "fit_hm"]
# Fit hierarchical model
input: test_association.output[1], 'config.yaml'
output: stamp('output/mixture.h5')
python:
from OmicsBMA import fit_hm
fit_hm(${input[0]!r}, ${output!r}, ${input[1]!r})

[omicsbma_3]
# Calculate posterior
input: 'data/priors.h5', fit_hm.output, test_association.output[1], 'config.yaml'
output: stamp('data/posterior.h5')
python:
from OmicsBMA import calculate_posterior
calculate_posterior(${input[0]!r}, ${input[1]!r}, ${input[2]!r}, ${output!r}, ${input[3]!r})
run:
  touch ${output}

[default]
sos_run('omicsbma')