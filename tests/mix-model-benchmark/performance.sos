#!/usr/bin/env sos-runner
#vim: set filetype=python: set expandtab : ts=4:
#fileformat=SOS1.0

[parameters]
dataset = 'data/head' # light toy
# dataset = 'data/test_association_l10abfs' # toy
threads = 8
lib_path = '../'
dim = 54

[default_1: alias = "data"]
# Convert eqtlbma BF to OmicsBMA format
input: '{}.gz'.format(dataset)
output: '{}.h5'.format(dataset)
python:
import sys, os
sys.path.append(${lib_path!ra})
import tables as tb
import warnings
warnings.simplefilter(action = "ignore", category = tb.NaturalNameWarning)
from OmicsBMA.deepdishio import save
from test_utils import load_eqtlbma_bf
save(${output!r}, load_eqtlbma_bf(${input!r}), compression = ("zlib", 9))

[default_2: alias = "rdata"]
# Convert OmicsBMA format to RDS
input: data.output, pattern = '{name}.{ext}'
output: pattern = '{name}.rds' 
python:
import sys, os
sys.path.append(${lib_path!ra})
from test_utils import load_omicsbma_bf
from dsc.utils import save_rds
import pandas as pd
data = load_omicsbma_bf(${input!r})
save_rds(pd.concat(data).ix[:,:${dim}], ${output!r})

[default_3]
# Run eqtlbma's HM procedure
input: data.input 
output: 'output/eqtlbma.gz'
python:
import os
os.system('eqtlbma_hm --data ${input} --nsubgrp 44 --dim 44 --ngrid 10 --out ${output} --thresh 0.01 --model configs --thread ${threads} -v 0')

# [default_4]
# # Run ASHR's EM procedure
# # FIXME: doesn't work:
# ## Error in function evaluation
# ## Calls: mixEM -> squarem -> squarem1
# ## In addition: Warning message:
# ## In log(m.rowsum) : NaNs produced
# check_R_library('Rmosek', repos = "http://download.mosek.com/R/7")
# check_R_library('REBayes')
# check_R_library('stephens999/ashr', '1.1.14+')
# input: rdata.output
# output: 'output/ASHR.EM.out'
# R:
# require(ashr)
# lik <- as.matrix(readRDS(${input!r}))
# prior <- rep(0, ncol(lik))
# res1 <- mixEM(lik, prior)
# lapply(res1, write, ${output}, append = T, ncolumns = 1000)

[default_5]
# Run mixIP's HM procedure
input: data.output
output: 'output/mixIP.${dim}'
python:
import sys, os
sys.path.append(${lib_path!ra})
from test_utils import load_omicsbma_bf
from OmicsBMA.mix_opt import mixIP
import pandas as pd
data = load_omicsbma_bf(${input!r})
res = mixIP(pd.concat(data).ix[:,:${dim}], control = {'iparam.num_threads': ${threads}, 'iparam.log': 0})
run:
  touch ${output} 
